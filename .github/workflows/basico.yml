name: Pipeline de Seguridad DevSecOps

on:
  push:
    branches: ["main"]
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: 1Ô∏è‚É£ Obtener c√≥digo del repositorio
        uses: actions/checkout@v4

      - name: 2Ô∏è‚É£ Verificar que index.html no est√© vac√≠o
        run: test -s index.html

      - name: 3Ô∏è‚É£ Instalar Snyk CLI
        run: npm install -g snyk

      - name: 4Ô∏è‚É£ Ejecutar an√°lisis Snyk y guardar reporte
        id: snyk_test
        run: |
          snyk auth $SNYK_TOKEN

          # Ejecutar escaneo (agrega --file= si tienes package.json u otro)
          snyk test --json > snyk-report.json || true

          echo "===== RESUMEN SNYK ====="
          echo "Vulnerabilidades por severidad:"
          jq -r '[.vulnerabilities[]?.severity] | group_by(.) | map({(.[0]): length}) | add // {}' snyk-report.json

          critical_count=$(jq '[.vulnerabilities[]?.severity] | map(select(.=="critical")) | length' snyk-report.json)
          high_count=$(jq '[.vulnerabilities[]?.severity] | map(select(.=="high")) | length' snyk-report.json)

          echo "Critical: $critical_count"
          echo "High: $high_count"

          echo "::set-output name=critical::$critical_count"
          echo "::set-output name=high::$high_count"

          echo ""
          echo "Listado resumido:"
          jq -r '.vulnerabilities[]? | "\(.severity | ascii_upcase) | \(.title) | \(.packageName // "N/A")"' snyk-report.json

        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

      - name: 5Ô∏è‚É£ Subir reporte como artefacto
        uses: actions/upload-artifact@v4
        with:
          name: snyk-report
          path: snyk-report.json

      - name: 6Ô∏è‚É£ Fallar si hay vulnerabilidades cr√≠ticas o muchas altas
        if: always()
        run: |
          crit=${{ steps.snyk_test.outputs.critical }}
          high=${{ steps.snyk_test.outputs.high }}
          echo "Evaluando pol√≠tica: critical=$crit, high=$high"
          if [ "$crit" -gt 0 ] || [ "$high" -gt 5 ]; then
            echo "‚ùå Vulnerabilidades cr√≠ticas detectadas. Abortando pipeline."
            exit 1
          else
            echo "‚úÖ Sin vulnerabilidades cr√≠ticas. Continuamos."
          fi

      - name: 7Ô∏è‚É£ Comentar resultado en PR (si aplica)
        if: ${{ github.event_name == 'pull_request' }}
        uses: actions/github-script@v7
        env:
          CRIT: ${{ steps.snyk_test.outputs.critical }}
          HIGH: ${{ steps.snyk_test.outputs.high }}
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const crit = process.env.CRIT;
            const high = process.env.HIGH;
            const body = `üß™ **Resultado Snyk**  
            - Critical: ${crit}  
            - High: ${high}  
            (pipeline ejecutado autom√°ticamente)`;
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body
            });
